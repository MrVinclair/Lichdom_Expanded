namespace = ek_lkhof

### The Head of Faith lacks an heir, either because we just died, or because the successor died
# 4 candidates, if there are not enough we create them
ek_lkhof.0001 = {
	type = character_event
	title = ek_lkhof.0001.t
	desc = {
		first_valid = { # Intro, why you have to pick a new one
			triggered_desc = { # The potential heir died, we pick another
				trigger = { has_character_flag = last_lkhof_potential_died }
				desc = ek_lkhof.0001.desc.last_lkhof_potential_died
			}
			triggered_desc = { # The potential HoF was led astray and converted
				trigger = { has_character_flag = last_lkhof_potential_converted }
				desc = ek_lkhof.0001.desc.last_lkhof_potential_converted
			}
			triggered_desc = { # We choose to pick another heir via decision
				trigger = { has_character_flag = last_lkhof_potential_lives }
				desc = ek_lkhof.0001.desc.last_lkhof_potential_lives
			}
			desc = ek_lkhof.0001.desc.other # Upon succession and others
		}
		
		desc = ek_lkhof.0001.desc
	}

	theme = faith
	
	left_portrait = {
		character = root
	}
	
	trigger = {
		# Head of Faith of a faith with Lich Kings Head of Faith doctrine
		faith = {
			has_doctrine = doctrine_lich_kings_head
			religious_head = root
		}
		
		NOT = {
			any_heir = {
				has_trait = lich_character
				faith = root.faith
				NOT = { has_character_flag = about_to_die_but_not_dead_yet_flag }
			}
		}
	}
	
	immediate = {
		hidden_effect = {
			every_living_character = {
				limit = {
					has_trait = lich_character
					faith = root.faith # ... Obviously
					
					# Needs to be respect the cultural identity doctrines
					trigger_if = {
						limit = {
							root.faith = {
								OR = {
									has_doctrine = doctrine_cultural_identity_heritage # Teeeeeeeechnically since it's not strongly tied it could I suppose accept outside heritages, but meh
									has_doctrine = doctrine_cultural_identity_heritage_exclusive
								}
							}
						}
						culture = { has_same_culture_heritage = root.culture }
					}
					trigger_else_if = {
						limit = {
							root.faith = {
								OR = {
									has_doctrine = doctrine_cultural_identity_culture
									has_doctrine = doctrine_cultural_identity_culture_exclusive
								}
							}
						}
						culture = root.culture
					}
					trigger_else = { always = yes }
					
					# Shouldn't be the house head as they'll switch house
					NOT = {
						AND = {
							exists = house.house_head
							this = house.house_head
						}
					}
				}
				add_to_list = lkhof_potential_successor
			}
			
			if = {
				limit = { list_size = { name = lkhof_potential_successor value >= 4 } }
				random_in_list = {
					list = lkhof_potential_successor
					save_scope_as = lkhof_potential_successor_4
				}
			}
			else = {
				lk_hof_generate_new_potential_heir = yes
				scope:new_lk_hof_potential_heir = { save_scope_as = lkhof_potential_successor_4 }
			}
			
			if = {
				limit = { list_size = { name = lkhof_potential_successor value >= 3 } }
				random_in_list = {
					limit = { NOR = { this = scope:lkhof_potential_successor_4 } }
					list = lkhof_potential_successor
					save_scope_as = lkhof_potential_successor_3
				}
			}
			else = {
				lk_hof_generate_new_potential_heir = yes
				scope:new_lk_hof_potential_heir = { save_scope_as = lkhof_potential_successor_3 }
			}
			
			if = {
				limit = { list_size = { name = lkhof_potential_successor value >= 2 } }
				random_in_list = {
					limit = { NOR = { this = scope:lkhof_potential_successor_4 this = scope:lkhof_potential_successor_3 } }
					list = lkhof_potential_successor
					save_scope_as = lkhof_potential_successor_2
				}
			}
			else = {
				lk_hof_generate_new_potential_heir = yes
				scope:new_lk_hof_potential_heir = { save_scope_as = lkhof_potential_successor_2 }
			}
			
			if = {
				limit = { list_size = { name = lkhof_potential_successor value >= 1 } }
				random_in_list = {
					limit = { NOR = { this = scope:lkhof_potential_successor_4 this = scope:lkhof_potential_successor_3 this = scope:lkhof_potential_successor_2 } }
					list = lkhof_potential_successor
					save_scope_as = lkhof_potential_successor_1
				}
			}
			else = {
				lk_hof_generate_new_potential_heir = yes
				scope:new_lk_hof_potential_heir = { save_scope_as = lkhof_potential_successor_1 }
			}
		}
	}
	
	### Who will we play next?
	option = {
		name = ek_lkhof.0001.lkhof_potential_successor_1
		
		scope:lkhof_potential_successor_1 = { save_scope_as = lkhof_successor }
		set_designated_heir = scope:lkhof_potential_successor_1
		
		custom_tooltip = ek_lkhof.0001.lkhof_potential_successor_1.tt
	}
	option = {
		name = ek_lkhof.0001.lkhof_potential_successor_2
		
		scope:lkhof_potential_successor_2 = { save_scope_as = lkhof_successor }
		set_designated_heir = scope:lkhof_potential_successor_2
		
		custom_tooltip = ek_lkhof.0001.lkhof_potential_successor_2.tt
	}
	option = {
		name = ek_lkhof.0001.lkhof_potential_successor_3
		
		scope:lkhof_potential_successor_3 = { save_scope_as = lkhof_successor }
		set_designated_heir = scope:lkhof_potential_successor_3
		
		custom_tooltip = ek_lkhof.0001.lkhof_potential_successor_3.tt
	}
	option = {
		name = ek_lkhof.0001.lkhof_potential_successor_4
		
		scope:lkhof_potential_successor_4 = { save_scope_as = lkhof_successor }
		set_designated_heir = scope:lkhof_potential_successor_4
		
		custom_tooltip = ek_lkhof.0001.lkhof_potential_successor_4.tt
	}
	
	after = {
		hidden_effect = {
			scope:lkhof_successor = {
				# We save their former dynasty, just in case they convert and need to be put back there
				if = {
					limit = { exists = house.house_head }
					set_variable = {
						name = lkhof_potential_successor_former_house_head
						value = house.house_head
					}
				}
				
				set_house = root.house
				add_character_flag = lich_kings_next_hof
			}
			add_courtier = scope:lkhof_successor
		}
	}
}
